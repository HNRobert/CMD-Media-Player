name: Release Build

on:
  push:
    tags:
      - "v*"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
      release_notes: ${{ steps.release_notes.outputs.NOTES }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Get version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Generate Release Notes
        id: release_notes
        run: |
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s" --no-merges)
            COMPARE_LINK="https://github.com/${{ github.repository }}/commits/${CURRENT_TAG}"
          else
            COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"- %s" --no-merges)
            COMPARE_LINK="https://github.com/${ github.repository }}/compare/${LAST_TAG}...${CURRENT_TAG}"
          fi
          
          echo "NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "## Release ${CURRENT_TAG}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "Changes in this release:" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "---" >> $GITHUB_OUTPUT
          echo "See full changelogs: [${LAST_TAG}...${CURRENT_TAG}](${COMPARE_LINK})" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  build-macos:
    needs: setup
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          brew update
          brew install cmake ffmpeg opencv sdl2 ncurses readline

      - name: Build
        run: |
          mkdir build && cd build
          cmake ..
          make

      - name: Create macOS Package
        run: |
          cd build
          zip -r CMD-Media-Player.zip CMD-Media-Player

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ needs.setup.outputs.version }}
          body: ${{ needs.setup.outputs.release_notes }}
          files: build/CMD-Media-Player.zip
          draft: false
          prerelease: false
